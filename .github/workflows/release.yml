name: Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write # Required for creating releases
  actions: read

jobs:
  wait-for-ci:
    name: Wait for CI to pass
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI workflow to complete
        uses: lewagon/wait-on-check-action@v1.4.0
        with:
          ref: ${{ github.ref }}
          check-name: 'CI'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  release:
    name: Release Docker Artifacts
    needs: wait-for-ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Inject secrets into .env
        run: |
          echo "FIREBASE_SERVICE_ACCOUNT_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}" >> .env

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "VERSION=$TAG" >> $GITHUB_ENV
          echo "Release version is $TAG"

      - name: Build Docker image
        run: |
          docker build -t lucas-website:${{ env.VERSION }} .

      - name: Save Docker image as tarball
        run: |
          docker save lucas-website:${{ env.VERSION }} -o lucas-website-${{ env.VERSION }}.tar

      - name: Upload Docker tarball as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: lucas-website-${{ env.VERSION }}.tar

      - name: Create GitHub Release and upload Docker tarball
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: lucas-website-${{ env.VERSION }}.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set file permissions
        run: chmod 644 ./lucas-website-${{ env.VERSION }}.tar

      - name: Deploy Docker image via SFTP
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          local_path: './lucas-website-${{ env.VERSION }}.tar'
          remote_path: '/github/'
          sftp_only: true
